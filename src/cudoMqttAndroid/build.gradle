plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'maven-publish'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.cudo.mqtt.android'
                artifactId = 'cudoMqttAndroid'
                version = '1.0'
            }
        }
    }
}

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 0
        versionName "1.0"

        testApplicationId "info.mgtt.android.service.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFile('proguard-sdk.pro')
        }
    }

}

dependencies {
    api "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.github.AppDevNext.Logcat:LogcatCoreLib:2.11.2"

    implementation "androidx.room:room-runtime:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"

    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"

    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:rules:1.4.0"
}

// 기존 library.jar 파일을 삭제.
task deleteObjectAAR(type: Delete){
    delete "build/outputs/"
}

// 기존 library.jar 파일을 삭제.
task deleteObjectJar(type: Delete){
    delete "release/${project.name}.jar"
}

// release 폴더에 library 이름으로 jar 생성.
task exportJar(type: Copy){
    from('build/intermediates/packaged-classes/release/')
    into('release/')
    include('classes.jar')
    rename("classes.jar", "${project.name}.jar")
}

exportJar.dependsOn(deleteObjectJar)